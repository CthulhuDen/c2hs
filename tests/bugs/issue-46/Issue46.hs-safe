module Main where

newtype Oid = Oid (ForeignPtr Oid)
withOid :: Oid -> (Ptr Oid -> IO b) -> IO b
withOid (Oid fptr) = withForeignPtr fptr

func :: Int -> Float -> IO Oid
func a2 a3 =
  mallocForeignPtrBytes 8 $ \oidfptr ->
  withForeignPtr oidfptr $ \oidptr ->
    let {a2' = fromIntegral a2} in
    let {a3' = realToFrac a3} in
    func'_ oidptr a2' a3' >>
    return $ Oid oidfptr

foreign import ccall safe "Issue46.chs.h func"
  func'_ :: (Ptr (Oid) -> CInt -> CFloat -> IO ()
